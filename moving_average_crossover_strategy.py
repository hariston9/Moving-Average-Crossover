# -*- coding: utf-8 -*-
"""Moving Average Crossover Strategy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1egVXQq3kYm-c65mb9P6fvvhdqa1B_car
"""

#Import the libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')

!pip install yfinance

import yfinance as yf
df = yf.download("MSFT", start="2016-09-02", end="2020-09-01")

df.head()

# set the date as the index
#data=data.set_index(pd.DatetimeIndex(data['Date'].values))

#Visually show the close prices
plt.figure(figsize=(16,8))
plt.title('Close Price History', fontsize=18)
plt.plot(df['Close'])
plt.xlabel('Date', fontsize=18)
plt.ylabel('Close Price', fontsize=18)
plt.show()

# Create a function to calculate the Simple Moving Average(SMA)

def SMA(data, period=30, column='Close'):
  return data[column].rolling(window=period).mean()

#Create two new columns to store the 20 day an 5- dat SMA
df['SMA20']=SMA(df, 20)
df['SMA50']=SMA(df, 50)

df

#Get the buy and sell signals
df['Signal']=np.where(df['SMA20']> df['SMA50'],1,0)
df['Position']=df['Signal'].diff()


df['Buy']=np.where(df['Position']==1, df["Close"], np.NAN)
df['Sell']=np.where(df['Position']==-1, df["Close"], np.NAN)

# Visually show the close price with the SMAs and Buy & Sell signals

plt.figure(figsize=(16,8))
plt.title('Close Price History w/ Buy & Sell Signals', fontsize=18)
plt.plot(df['Close'], alpha=0.5, label='Close')
plt.plot(df['SMA20'], alpha=0.5, label='Close')
plt.plot(df['SMA50'], alpha=0.5, label='Close')
plt.scatter(df.index, df['Buy'], alpha=1, label='Buy Signal', marker= '^', color='green')
plt.scatter(df.index, df['Sell'], alpha=1, label='Sell Signal', marker= '^', color='red')

plt.xlabel('Date', fontsize=18)
plt.ylabel('Close Price', fontsize=18)
plt.show()

